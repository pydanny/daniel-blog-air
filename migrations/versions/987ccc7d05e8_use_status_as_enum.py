"""Use status as enum

Revision ID: 987ccc7d05e8
Revises: 951ec84b6878
Create Date: 2025-09-06 14:41:02.488172

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "987ccc7d05e8"
down_revision: Union[str, Sequence[str], None] = "951ec84b6878"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "unconfirmed", "subscribed", "unsubscribed", "on_hold", name="statusenum"
    ).create(op.get_bind())
    op.add_column(
        "subscription",
        sa.Column(
            "status",
            postgresql.ENUM(
                "unconfirmed",
                "subscribed",
                "unsubscribed",
                "on_hold",
                name="statusenum",
                create_type=False,
            ),
            nullable=False,
        ),
    )
    op.drop_column("subscription", "subscribed")
    op.drop_column("subscription", "confirmed")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "subscription",
        sa.Column("confirmed", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "subscription",
        sa.Column("subscribed", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_column("subscription", "status")
    sa.Enum(
        "unconfirmed", "subscribed", "unsubscribed", "on_hold", name="statusenum"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
